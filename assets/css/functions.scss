:root {
  --font: Space Grotesk;
  --color-bg: white;
  --color-fg: black;
  --color-medium: #999;
  --color-dark: #666;
  --color-accent: purple;
  --color-accent-2: #EDB6D3;
  --logo-big: 90px;
  --logo-small: 36px;
  --pdf: 100vh;
   --nav: 150px;
   
--lang: 50px;
  --pdf-ratio: 0.3863636364;
  --delay: 300ms;
  --gap: 15px;
  --CTA-size: 130px;
  --gap-2: calc(var(--gap) * 2);
  --gap-3: calc(var(--gap) * 3);
  --gap-4: calc(var(--gap) * 4);
  --gap-5: calc(var(--gap) * 5);
  --gap-6: calc(var(--gap) * 6);
  --gap-7: calc(var(--gap) * 7);
  --gap-8: calc(var(--gap) * 8);
  --gap-9: calc(var(--gap) * 9);
  --gap-10: calc(var(--gap) * 10);
  --gap-half: calc(var(--gap) / 2);
  --gap-quart: calc(var(--gap) / 4);
  &.dark-mode {
  --color-bg: #281831;
  --color-fg: white;
  --color-medium: white;
  --color-dark: #999;
  --color-accent: #EDB6D3;
  --color-accent-2: purple;
  body {
    background-image: url("../images/dot-bg-dark-mode.svg");
  }
  section.session  .counter:before {
background-color: rgba(white, .3);
    }
    .cover {
      display: none;
    }
}
}



@mixin highlight(
  $bg: var(--color-bg), 
  $gap: 10px, 
  $spacing: 20px, 
  $top: 10px, 
  $bottom: 5px, 
  $break: true
  ) {
  display: inline;
  background: $bg;
  box-shadow: $gap 0 0 $bg,
  -$gap 0 0 $bg;
  position: relative;
  padding-bottom: $bottom;
  padding-top: $top;
  box-decoration-break: clone;

  @if $break==true {
    &::after {
      content: "";
      display: block;
      height: $spacing;
      background: none !important;
    }
  }
}

@mixin assorted-bgs {
  &:nth-of-type(1) {
        background: #2C3E50;  /* fallback for old browsers */
    background: -webkit-linear-gradient(to right, #FD746C, #2C3E50);  /* Chrome 10-25, Safari 5.1-6 */
    background: linear-gradient(to right, #FD746C, #2C3E50); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
  }
  &:nth-of-type(2) {
    background: #aa4b6b;  /* fallback for old browsers */
background: -webkit-linear-gradient(to right, #3b8d99, #6b6b83, #aa4b6b);  /* Chrome 10-25, Safari 5.1-6 */
background: linear-gradient(to right, #3b8d99, #6b6b83, #aa4b6b); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

  }
  &:nth-of-type(3) {
    background: #f12711;  /* fallback for old browsers */
background: -webkit-linear-gradient(to right, #f5af19, #f12711);  /* Chrome 10-25, Safari 5.1-6 */
background: linear-gradient(to right, #f5af19, #f12711); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

  }
  &:nth-of-type(4) {
    background: #659999;  /* fallback for old browsers */
background: -webkit-linear-gradient(to right, #f4791f, #659999);  /* Chrome 10-25, Safari 5.1-6 */
background: linear-gradient(to right, #f4791f, #659999); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

  }
}


@mixin stagger($start: 1, $diffraction: 0) {
  &:nth-of-type($start + 0) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 0 + $diffraction));
  }
    &:nth-of-type($start + 1) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 1 + $diffraction));
  }
    &:nth-of-type($start + 2) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 2 + $diffraction));
  }
    &:nth-of-type($start + 3) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 3 + $diffraction));
  }
    &:nth-of-type($start + 4) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 4 + $diffraction));
  }
    &:nth-of-type($start + 5) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 5 + $diffraction));
  }
    &:nth-of-type($start + 6) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 6 + $diffraction));
  }
    &:nth-of-type($start + 7) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 7 + $diffraction));
  }
    &:nth-of-type($start + 8) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 8 + $diffraction));
  }
    &:nth-of-type($start + 9) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 9 + $diffraction));
  }
    &:nth-of-type($start + 10) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 10 + $diffraction));
  }
    &:nth-of-type($start + 11) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 11 + $diffraction));
  }
     &:nth-of-type($start + 12) {
    @include fadeInDown($delay: calc(var(--delay) * $start + 12 + $diffraction));
  }
}
